apiVersion: tekton.dev/v1beta1
kind: Task
metadata:
  name: install-prometheus
spec:
  params:
    - name: RELEASE_NAME
      description: "Helm release name"
      default: "prometheus"
    - name: NAMESPACE
      description: "Kubernetes namespace where Prometheus will be installed"
      default: "default"  # Use the default namespace
    - name: VALUES_FILE
      description: "Optional custom values file for Prometheus installation"
      default: ""

  workspaces:
    - name: config
      description: "Workspace containing custom values.yaml file"

  steps:
    - name: install-helm
      image: alpine/helm:3.9.0
      script: |
        echo "Removing old Helm repo if it exists..."
        helm repo remove prometheus-community || true
        echo "Adding Prometheus community Helm repository..."
        helm repo add prometheus-community https://prometheus-community.github.io/helm-charts
        helm repo update

    - name: uninstall-old-release
      image: alpine/helm:3.9.0
      script: |
        echo "Checking if the release $(params.RELEASE_NAME) exists and uninstalling it if it does..."
        helm ls --namespace $(params.NAMESPACE) --filter $(params.RELEASE_NAME) | grep $(params.RELEASE_NAME) && \
        helm uninstall $(params.RELEASE_NAME) --namespace $(params.NAMESPACE) || \
        echo "No existing release found, proceeding with installation."

    - name: install-prometheus
      image: alpine/helm:3.9.0
      script: |
        echo "Installing or upgrading Prometheus using Helm..."
        if helm ls --namespace $(params.NAMESPACE) --filter $(params.RELEASE_NAME) | grep $(params.RELEASE_NAME); then
          echo "Upgrading existing release..."
          helm upgrade $(params.RELEASE_NAME) prometheus-community/prometheus --namespace $(params.NAMESPACE) -f $(params.VALUES_FILE) -v 10
        else
          echo "Installing new release..."
          helm install $(params.RELEASE_NAME) prometheus-community/prometheus --namespace $(params.NAMESPACE) -f $(params.VALUES_FILE) -v 10
        fi

    - name: list-workspace
      image: busybox
      script: |
        echo "Listing contents of /workspace/config:"
        ls -l /workspace/config
